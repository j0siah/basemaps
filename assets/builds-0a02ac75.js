import{r as p,j as t,c as b,R as g}from"./index-81f15401.js";function $(e){const s=parseInt(e.substring(0,4),10),n=parseInt(e.substring(4,6),10)-1,r=parseInt(e.substring(6,8),10);return new Date(s,n,r).getDay()===1}function f(e,s=2){if(!+e)return"0 Bytes";const n=1024,r=s<0?0:s,l=["Bytes","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"],i=Math.floor(Math.log(e)/Math.log(n));return`${parseFloat((e/n**i).toFixed(r))} ${l[i]}`}function B(e){const s=e.build,n=`https://build.protomaps.com/${s.key}`,r=s.key.substr(0,8),l=`https://build.protomaps.com/${r}.layerstats.parquet`,i=e.idx,c=()=>{e.setCmpA(i)},d=()=>{e.setCmpB(i)};return t.jsxs("tr",{style:{color:$(r)?"white":"#aaa"},children:[t.jsxs("td",{children:[t.jsx("span",{style:{display:"inline-block",width:"20px"},children:i>e.cmpB&&t.jsx("input",{type:"radio",onChange:c,checked:i===e.cmpA})}),t.jsx("span",{style:{display:"inline-block",width:"20px"},children:i<e.cmpA&&t.jsx("input",{type:"radio",onChange:d,checked:i===e.cmpB})})]}),t.jsx("td",{children:s.key}),t.jsx("td",{children:s.version}),t.jsx("td",{children:f(s.size)}),t.jsx("td",{children:s.uploaded}),t.jsx("td",{children:t.jsx("a",{href:`/#tiles=${n}`,children:"map"})}),t.jsx("td",{children:t.jsx("a",{href:`https://protomaps.github.io/PMTiles/?url=${n}`,children:"xray"})}),t.jsx("td",{children:t.jsx("a",{href:n,children:"download"})}),t.jsx("td",{children:r>="20231228"?t.jsx("a",{href:l,children:"stats"}):null})]})}function k(){const[e,s]=p.useState([]),[n,r]=p.useState(1),[l,i]=p.useState(0),c="2.0.0-alpha.0",d="light",m=()=>{const o=`https://build.protomaps.com/${e[n].key}`,a=`https://build.protomaps.com/${e[l].key}`;open(`/visualtests/?leftTiles=${o}&rightTiles=${a}`)},y=()=>{const o=e[n].key.replace(".pmtiles",""),a=e[l].key.replace(".pmtiles",""),h={name:`${o} ${c} ${d}`,type:"maplibre-gl",renderer:"maplibre-gl",index:0,url:`https://build-metadata.protomaps.dev/style@${c}+theme@${d}+tiles@${o}.json`},x={name:`${a} ${c} ${d}`,type:"maplibre-gl",renderer:"maplibre-gl",index:0,url:`https://build-metadata.protomaps.dev/style@${c}+theme@${d}+tiles@${a}.json`},j=JSON.stringify([h,x]);open(`https://stamen.github.io/maperture/#maps=${encodeURIComponent(j)}`)};return p.useEffect(()=>{fetch("https://build-metadata.protomaps.dev/builds.json").then(o=>o.json()).then(o=>{s(o.sort((a,h)=>a.key<h.key))})},[]),t.jsxs("div",{className:"builds",children:[t.jsx("h1",{children:"Builds"}),t.jsx("p",{children:"only Monday builds (white) are kept indefinitely."}),t.jsx("button",{type:"button",onClick:m,children:"Compare visual tests"}),t.jsx("button",{type:"button",onClick:y,children:"Compare in Maperture"}),t.jsx("table",{children:t.jsx("tbody",{children:e.map((o,a)=>t.jsx(B,{build:o,idx:a,cmpA:n,cmpB:l,setCmpA:r,setCmpB:i},o.key))})})]})}const u=document.getElementById("root");u&&b.createRoot(u).render(t.jsx(g.StrictMode,{children:t.jsx(k,{})}));
